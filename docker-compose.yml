version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql-container-market-place
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: marketPlace
      MYSQL_USER: spring
      MYSQL_PASSWORD: spring
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-network

  app:
    build:
      context: .
    container_name: springboot-app-market-place
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "5458:5457"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/marketPlace?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: spring
      SPRING_DATASOURCE_PASSWORD: spring
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafka-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper-market-place
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

volumes:
  mysql_data:

networks:
  kafka-network:
    external: true
